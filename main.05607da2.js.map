{"version":3,"sources":["scripts/main.js"],"names":["inputList","document","querySelectorAll","divideWord","str","words","index","i","length","toUpperCase","push","slice","join","createLabel","input","insertAdjacentHTML","id","name","createPlaceholder","placeholder","forEach"],"mappings":";AAAA,aAoCA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAlCA,IAAMA,EAAgBC,EAAAA,SAASC,iBAAiB,UAE1CC,EAAa,SAACC,GAIb,IAHCC,IAAAA,EAAQ,GACVC,EAAQ,EAEHC,EAAI,EAAGA,EAAIH,EAAII,OAAQD,IAC1BH,EAAIG,KAAOH,EAAIG,GAAGE,gBACpBJ,EAAMK,KAAKN,EAAIO,MAAML,EAAOC,IAC5BD,EAAQC,GAMLF,OAFPA,EAAMK,KAAKN,EAAIO,MAAML,IAEdD,EAAMO,KAAK,MAGdC,EAAc,SAACC,GACnBA,EAAMC,mBAAmB,cACVD,oBAAAA,OAAAA,EAAME,GACfb,iCAAAA,OAAAA,EAAWW,EAAMG,MAFvB,wBAOIC,EAAoB,SAACJ,GACrBT,IAAAA,EAAQF,EAAWW,EAAMG,MAE7BZ,EAAQA,EAAM,GAAGI,cAAgBJ,EAAMM,MAAM,GAC7CG,EAAMK,YAAcd,GAGtBL,EAAUoB,QAAQP,GAClBb,EAAUoB,QAAQF","file":"main.05607da2.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst inputList = [...document.querySelectorAll('input')];\n\nconst divideWord = (str) => {\n  const words = [];\n  let index = 0;\n\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === str[i].toUpperCase()) {\n      words.push(str.slice(index, i));\n      index = i;\n    }\n  }\n\n  words.push(str.slice(index));\n\n  return words.join(' ');\n};\n\nconst createLabel = (input) => {\n  input.insertAdjacentHTML('beforebegin', `\n    <label for=${input.id} class=\"field-label\">\n      ${divideWord(input.name)}\n    </label>\n  `);\n};\n\nconst createPlaceholder = (input) => {\n  let words = divideWord(input.name);\n\n  words = words[0].toUpperCase() + words.slice(1);\n  input.placeholder = words;\n};\n\ninputList.forEach(createLabel);\ninputList.forEach(createPlaceholder);\n"]}